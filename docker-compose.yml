services:
  # PostgreSQL Database Service
  basic-3tier-postgres:
    image: postgres:latest
    container_name: basic-3tier-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: basic3tier
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - basic3tier

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@postgres.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5431:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - basic-3tier-postgres
    networks:
      - basic3tier

  # .NET Core WebAPI Service
  webapi:
    image: kholha/api-app:latest
    container_name: basic-3tier-api
    ports:
      - "7000:80"
    depends_on:
      - basic-3tier-postgres
    environment:
      ConnectionStrings__Basic3Tier: "Host=basic-3tier-postgres;Port=5432;Database=basic3tier;Username=postgres;Password=admin123"
    networks:
      - basic3tier

  # Frontend Application
  frontend:
    image: kholha/ui-app:latest
    container_name: basic-3tier-ui
    ports:
      - "5000:80"
    networks:
      - basic3tier
    volumes:
      - ./ui/configs:/usr/share/nginx/html/configs:ro
    depends_on:
      - webapi
      - basic-3tier-postgres

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus-config:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
#    entrypoint:
#      - sleep
#      - inf
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/data:/data

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis

volumes:
  postgres_data:
  pgadmin_data:
  prometheus-data:
  prometheus-config:
  grafana-data:


networks:
  basic3tier:
    name: basic3tier
    driver: bridge
  monitoring:
    name: monitoring
    driver: bridge

# docker network create basic3tier
# docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' basic-3tier-postgres
# docker-compose build
# docker-compose up -d
# docker-compose down